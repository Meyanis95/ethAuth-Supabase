import Head from 'next/head'
import { useState } from 'react'
import {ethers} from 'ethers';
import { createClient } from '@supabase/supabase-js';

const supabase = createClient(process.env.NEXT_PUBLIC_SUPABASE_PUBLIC_URL, process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY) 

export default function Home() {
  const [loginState, setLoginState] = useState();

  const checkUser = async () => {
    let {data, error} = await supabase.from('users').select('*')
    console.log('data', data)
    console.log('error', error)
  }

  const login = async () => {
    setLoginState('Connecting to your wallet...')

    if (!window.ethereum) {
      setLoginState('No Metamask wallet... please install it')
      return
    }

    const provider = new ethers.providers.Web3Provider(window.ethereum);
    await provider.send("eth_requestAccounts", [])
    const signer = provider.getSigner();
    const ethAddress = await signer.getAddress(); 
    console.log("Connected ethreum address", ethAddress)

    try {
      setLoginState('Generating nonce...')
      const callNonce = await fetch("api/nonce",{
        method: "POST", 
        body: JSON.stringify({ethAddress}), 
        headers: {
          "content-type": "application/json"
        }
      } 
      )
  
      const { nonce } = await callNonce.json()

      setLoginState('Please sign the nonce')
      const signature = await signer.signMessage(nonce)
      console.log("signature", signature)

      const callVerify = await fetch("api/verify",{
        method: "POST", 
        body: JSON.stringify({ethAddress, signature, nonce}), 
        headers: {
          "content-type": "application/json"
        }
      } 
      )

      setLoginState('Login completed')
      // returning the user instance stored in our database
      const { user, token } = await callVerify.json()

      await supabase.auth.setAuth(token)

    } catch(error) {
      console.log(error)
    }

  }
 
  return (
    <div>
      <Head>
        <title>Ethereum sign-in</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main>
        <p>{loginState}</p>
        <div><button onClick={login}>Connect</button></div>
        <br/>
        <div><button onClick={checkUser}>Check user</button></div>
      </main>
    </div>
  )
}
